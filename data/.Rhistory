year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
mean_happiness <- c(average_2015, average_2016, average_2017, average_2018,
average_2019, average_2020, average_2021)
average_happiness_by_year <- data.frame(year, mean_happiness)
View(average_happiness_by_year)
# Create a dataframe with just the country names, regions, and happiness scores
Happiness_by_Region_2021 <- wh_2021_df %>%
select(Country, Region, Happiness.Score) %>%
group_by(Region) %>%
summarize(avg_by_region = mean(Happiness.Score)) %>%
arrange(desc(avg_by_region))
View(wh_2015_df)
View(Happiness_by_Region_2021)
do.call("rbind", list(wh_2015, wh_2016, wh_2017_df))
do.call("rbind", list(wh_2015_df, wh_2016_df, wh_2017_df))
new_df <- do.call("rbind", list(wh_2015_df, wh_2016_df, wh_2017_df))
View(wh_2015_df)
colnames(wh_2015)
colnames(wh_2015_df)
health_to_happiness <- function(df) {
new_df <- df %>%
select(df, Country, Happiness.Score, Happiness.Rank, Health..Life.Expectancy.)
return new_df
}
# select only the country, happiness score, and health columns of datasets
health_to_happiness <- function(df) {
new_df <- df %>%
select(df, Country, Happiness.Score, Happiness.Rank, Health..Life.Expectancy.) %>%
arrange(desc(Happiness.Rank))
return(new_df)
}
health_to_happiness(wh_2015_df)
health_to_happiness <- function(df) {
new_df <- df %>%
select(df, Country::Happiness.Score, contains('Health')) %>%
arrange(desc(Happiness.Rank))
return(new_df)
}
health_to_happiness(wh_2015_df)
health_2015 <- health_to_happiness(wh_2015_df)
new_2015 <- wh_2015_df %>%
summarise_at(c(Happiness.Score, Economy..GDP.per.Capita.,
Family, Health..Life.Expectancy. , Freedom,
Trust..Government.Corruption., Generosity),
mean, na.rm = TRUE)
new_2015 <- wh_2015_df %>%
summarise_at(c(Happiness.Score, Economy..GDP.per.Capita.,
Family, Health..Life.Expectancy. , Freedom,
Trust..Government.Corruption., Generosity),
mean, na.rm = TRUE)
new_2015 <- wh_2015_df %>%
summarise_at(c('Happiness.Score', 'Economy..GDP.per.Capita.',
'Family', 'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
mean, na.rm = TRUE)
View(new_2015)
numeric_mean(wh_2015_df)
numeric_mean <- function(df) {
numeric_mean_df <- df %>%
summarise_at(c('Happiness.Score', 'Economy..GDP.per.Capita.',
'Family', 'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
mean, na.rm = TRUE)
return(numeric_mean_df)
}
numeric_mean(wh_2015_df)
numeric_mean(wh_2015_df)
numeric_mean(wh_2016_df)
all_means_2015 <- numeric_mean(wh_2015_df)
all_means_2016 <- numeric_mean(wh_2016_df)
data.frame(all_means_2015, all_means_2016)
all_means_df <- data.frame(all_means_2015, all_means_2016)
View(all_means_df)
all_means_df = merge(x = all_means_2015, y = all_means_2016)
View(all_means_df)
all_means_df = merge(x = all_means_2015, y = all_means_2016, by = NULL)
View(all_means_df)
all_means_df <- rbind(all_means_2015, all_means_2016)
View(all_means_df)
all_means_2015 <- numeric_mean(wh_2015_df)
all_means_2016 <- numeric_mean(wh_2016_df)
all_means_2017 <- numeric_mean(wh_2017_df)
all_means_2018 <- numeric_mean(wh_2018_df)
all_means_2019 <- numeric_mean(wh_2019_df)
all_means_2020 <- numeric_mean(wh_2020_df)
all_means_2021 <- numeric_mean(wh_2021_df)
all_means_df <- rbind(all_means_2015, all_means_2016, all_means_2017,
all_means_2018, all_means_2019, all_means_2020,
all_means_2021)
all_means_2015 <- numeric_mean(wh_2015_df)
all_means_2016 <- numeric_mean(wh_2016_df)
all_means_2017 <- numeric_mean(wh_2017_df)
all_means_2018 <- numeric_mean(wh_2018_df)
all_means_2019 <- numeric_mean(wh_2019_df)
all_means_2020 <- numeric_mean(wh_2020_df)
all_means_2021 <- numeric_mean(wh_2021_df)
numeric_mean <- function(df) {
numeric_mean_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
mean, na.rm = TRUE)
return(numeric_mean_df)
}
all_means_2015 <- numeric_mean(wh_2015_df)
all_means_2016 <- numeric_mean(wh_2016_df)
all_means_2017 <- numeric_mean(wh_2017_df)
all_means_2018 <- numeric_mean(wh_2018_df)
all_means_2019 <- numeric_mean(wh_2019_df)
all_means_2020 <- numeric_mean(wh_2020_df)
all_means_2021 <- numeric_mean(wh_2021_df)
all_means_df <- rbind(all_means_2015, all_means_2016, all_means_2017,
all_means_2018, all_means_2019, all_means_2020,
all_means_2021)
View(wh_2020_df)
wh_2020_df <- read.csv('2020.csv')
# Create a function to take the mean of all numeric columns
numeric_mean <- function(df) {
numeric_mean_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
mean, na.rm = TRUE)
return(numeric_mean_df)
}
all_means_2015 <- numeric_mean(wh_2015_df)
all_means_2016 <- numeric_mean(wh_2016_df)
all_means_2017 <- numeric_mean(wh_2017_df)
all_means_2018 <- numeric_mean(wh_2018_df)
all_means_2019 <- numeric_mean(wh_2019_df)
all_means_2020 <- numeric_mean(wh_2020_df)
all_means_2021 <- numeric_mean(wh_2021_df)
all_means_df <- rbind(all_means_2015, all_means_2016, all_means_2017,
all_means_2018, all_means_2019, all_means_2020,
all_means_2021)
View(wh_2019_df)
wh_2020_df <- read.csv('2020.csv')
# Create a function to take the mean of all numeric columns
numeric_mean <- function(df) {
numeric_mean_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
mean, na.rm = TRUE)
return(numeric_mean_df)
}
all_means_2015 <- numeric_mean(wh_2015_df)
all_means_2016 <- numeric_mean(wh_2016_df)
all_means_2017 <- numeric_mean(wh_2017_df)
all_means_2018 <- numeric_mean(wh_2018_df)
all_means_2019 <- numeric_mean(wh_2019_df)
all_means_2020 <- numeric_mean(wh_2020_df)
all_means_2021 <- numeric_mean(wh_2021_df)
all_means_df <- rbind(all_means_2015, all_means_2016, all_means_2017,
all_means_2018, all_means_2019, all_means_2020,
all_means_2021)
View(all_means_df)
all_means_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020)
all_means_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_means_df <- select(all_means_df, 7, 1, 2, 3, 4, 5, 6)
average_happiness_by_year <- data.frame(year, mean_happiness)
happiness_by_region <- function(df) {
new_df <- df %>%
select(Country, Region, Happiness.Score) %>%
group_by(Region) %>%
summarize(avg_by_region = mean(Happiness.Score)) %>%
arrange(desc(avg_by_region))
return(new_df)
}
# select only the country, happiness score, and health columns of datasets
health_to_happiness <- function(df) {
new_df <- df %>%
select(df, Country::Happiness.Score, contains('Health')) %>%
arrange(desc(Happiness.Rank))
return(new_df)
}
View(new_2015)
View(new_2015)
# Aggregate Table Script
# load in original dataframes
setwd('~/info201/final-project-staccjch/data')
wh_2016_df <- read.csv('2016.csv')
wh_2015_df <- read.csv('2015.csv')
wh_2017_df <- read.csv('2017.csv')
wh_2018_df <- read.csv('2018.csv')
wh_2019_df <- read.csv('2019.csv')
wh_2020_df <- read.csv('2020.csv')
wh_2021_df <- read.csv('2021.csv')
# load in packages useful for further analysis
library(dplyr)
library(ggplot2)
library(hrbrthemes)
# Use a function to describe the happiness score average each year
avg <- function(df) {
avg_of_year = mean(df$Happiness.Score)
}
average_2015 = avg(wh_2015_df)
average_2016 = avg(wh_2016_df)
average_2017 = avg(wh_2017_df)
average_2018 = avg(wh_2018_df)
average_2019 = avg(wh_2019_df)
average_2020 = avg(wh_2020_df)
average_2021 = avg(wh_2021_df)
# Merge 'average world happiness per year' into a table
year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
mean_happiness <- c(average_2015, average_2016, average_2017, average_2018,
average_2019, average_2020, average_2021)
average_happiness_by_year <- data.frame(year, mean_happiness)
# Group 'Happiness_by_Region_2021' into a table
Happiness_by_Region_2021 <- wh_2021_df %>%
select(Country, Region, Happiness.Score) %>%
group_by(Region) %>%
summarize(avg_by_region = mean(Happiness.Score)) %>%
arrange(desc(avg_by_region))
happiness_by_region <- function(df) {
new_df <- df %>%
select(Country, Region, Happiness.Score) %>%
group_by(Region) %>%
summarize(avg_by_region = mean(Happiness.Score)) %>%
arrange(desc(avg_by_region))
return(new_df)
}
# select only the country, happiness score, and health columns of datasets
health_to_happiness <- function(df) {
new_df <- df %>%
select(df, Country::Happiness.Score, contains('Health')) %>%
arrange(desc(Happiness.Rank))
return(new_df)
}
# Create a function to take the mean of all numeric columns
numeric_mean <- function(df) {
numeric_mean_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
mean, na.rm = TRUE)
return(numeric_mean_df)
}
# Create a table of all the means of numerical columns
all_means_2015 <- numeric_mean(wh_2015_df)
all_means_2016 <- numeric_mean(wh_2016_df)
all_means_2017 <- numeric_mean(wh_2017_df)
all_means_2018 <- numeric_mean(wh_2018_df)
all_means_2019 <- numeric_mean(wh_2019_df)
all_means_2020 <- numeric_mean(wh_2020_df)
all_means_2021 <- numeric_mean(wh_2021_df)
all_means_df <- rbind(all_means_2015, all_means_2016, all_means_2017,
all_means_2018, all_means_2019, all_means_2020,
all_means_2021)
all_means_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_means_df <- select(all_means_df, 7, 1, 2, 3, 4, 5, 6)
View(Happiness_by_Region_2021)
View(all_means_df)
View(average_happiness_by_year)
View(average_happiness_by_year)
View(Happiness_by_Region_2021)
View(all_means_df)
# Group 'Happiness_by_Region_2021' into a table
Happiness_by_Region_2021 <- wh_2021_df %>%
select(Country, Region, Happiness.Score) %>%
group_by(Region) %>%
summarize(avg_by_region = mean(Happiness.Score)) %>%
arrange(desc(avg_by_region))
# Aggregate Table Script
# load in original dataframes
setwd('~/info201/final-project-staccjch/data')
wh_2016_df <- read.csv('2016.csv')
wh_2015_df <- read.csv('2015.csv')
wh_2017_df <- read.csv('2017.csv')
wh_2018_df <- read.csv('2018.csv')
wh_2019_df <- read.csv('2019.csv')
wh_2020_df <- read.csv('2020.csv')
wh_2021_df <- read.csv('2021.csv')
# load in packages useful for further analysis
library(dplyr)
library(ggplot2)
library(hrbrthemes)
# Use a function to describe the happiness score average each year
avg <- function(df) {
avg_of_year = mean(df$Happiness.Score)
}
average_2015 = avg(wh_2015_df)
average_2016 = avg(wh_2016_df)
average_2017 = avg(wh_2017_df)
average_2018 = avg(wh_2018_df)
average_2019 = avg(wh_2019_df)
average_2020 = avg(wh_2020_df)
average_2021 = avg(wh_2021_df)
# # Merge 'average world happiness per year' into a table
# year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
# mean_happiness <- c(average_2015, average_2016, average_2017, average_2018,
#                     average_2019, average_2020, average_2021)
# average_happiness_by_year <- data.frame(year, mean_happiness)
# Group 'Happiness_by_Region_2021' into a table
Happiness_by_Region_2021 <- wh_2021_df %>%
select(Country, Region, Happiness.Score) %>%
group_by(Region) %>%
summarize(avg_by_region = mean(Happiness.Score)) %>%
arrange(desc(avg_by_region))
# happiness_by_region <- function(df) {
#   new_df <- df %>%
#     select(Country, Region, Happiness.Score) %>%
#     group_by(Region) %>%
#     summarize(avg_by_region = mean(Happiness.Score)) %>%
#     arrange(desc(avg_by_region))
#   return(new_df)
# }
#
# # select only the country, happiness score, and health columns of datasets
# health_to_happiness <- function(df) {
#   new_df <- df %>%
#     select(df, Country::Happiness.Score, contains('Health')) %>%
#     arrange(desc(Happiness.Rank))
# return(new_df)
# }
# Create a function to take the mean of all numeric columns
numeric_mean <- function(df) {
numeric_mean_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
mean, na.rm = TRUE)
return(numeric_mean_df)
}
# Create a table of all the means of numerical columns
all_means_2015 <- numeric_mean(wh_2015_df)
all_means_2016 <- numeric_mean(wh_2016_df)
all_means_2017 <- numeric_mean(wh_2017_df)
all_means_2018 <- numeric_mean(wh_2018_df)
all_means_2019 <- numeric_mean(wh_2019_df)
all_means_2020 <- numeric_mean(wh_2020_df)
all_means_2021 <- numeric_mean(wh_2021_df)
all_means_df <- rbind(all_means_2015, all_means_2016, all_means_2017,
all_means_2018, all_means_2019, all_means_2020,
all_means_2021)
all_means_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_means_df <- select(all_means_df, 7, 1, 2, 3, 4, 5, 6)
View(Happiness_by_Region_2021)
View(all_means_df)
# Create a function to take the max of all numeric columns
numeric_limits <- function(df) {
numeric_limits_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
min, max, na.rm = TRUE)
return(numeric_limits_df)
}
limits_2015 <- numeric_limits(wh_2015_df)
# Create a function to take the max of all numeric columns
numeric_limits <- function(df) {
numeric_limits_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
min, na.rm = TRUE)
return(numeric_limits_df)
}
limits_2015 <- numeric_limits(wh_2015_df)
View(limits_2015)
# Create a function to take the max of all numeric columns
numeric_mins <- function(df) {
numeric_limits_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
min, na.rm = TRUE)
return(numeric_mins_df)
}
min_2015 <- numeric_mins(wh_2015_df)
# Create a function to take the max of all numeric columns
numeric_mins <- function(df) {
numeric_mins_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
min, na.rm = TRUE)
return(numeric_mins_df)
}
min_2015 <- numeric_mins(wh_2015_df)
View(min_2015)
numeric_mins <- function(df) {
numeric_mins_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
min, na.rm = TRUE)
return(numeric_mins_df)
}
min_2015 <- numeric_mins(wh_2015_df)
min_2016 <- numeric_mins(wh_2016_df)
min_2017 <- numeric_mins(wh_2017_df)
min_2018 <- numeric_mins(wh_2018_df)
min_2019 <- numeric_mins(wh_2019_df)
min_2020 <- numeric_mins(wh_2020_df)
min_2021 <- numeric_mins(wh_2021_df)
all_mins_df <- rbind(min_2015, min_2016, min_2017, min_2018, min_2019, min_2020, min_2021)
all_mins_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_mins_df <- select(all_means_df, 7, 1, 2, 3, 4, 5, 6)
View(Happiness_by_Region_2021)
View(Happiness_by_Region_2021)
View(all_mins_df)
all_mins_df <- rbind(min_2015, min_2016, min_2017, min_2018, min_2019, min_2020, min_2021)
all_mins_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_mins_df <- select(all_mins_df, 7, 1, 2, 3, 4, 5, 6)
View(all_mins_df)
numeric_max <- function(df) {
numeric_max <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
max, na.rm = TRUE)
return(numeric_max_df)
}
max_2015 <- numeric_max(wh_2015_df)
max_2016 <- numeric_max(wh_2016_df)
max_2017 <- numeric_max(wh_2017_df)
max_2018 <- numeric_max(wh_2018_df)
max_2019 <- numeric_max(wh_2019_df)
max_2020 <- numeric_max(wh_2020_df)
max_2021 <- numeric_max(wh_2021_df)
all_maxs_df <- rbind(max_2015, max_2016, max_2017, max_2018,
max_2019, max_2020, max_2021)
all_maxs_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_maxs_df <- select(all_maxs_df, 7, 1, 2, 3, 4, 5, 6)
numeric_max <- function(df) {
numeric_max <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
max, na.rm = TRUE)
return(numeric_max_df)
}
max_2015 <- numeric_max(wh_2015_df)
numeric_max <- function(df) {
numeric_max_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
max, na.rm = TRUE)
return(numeric_max_df)
}
max_2015 <- numeric_max(wh_2015_df)
max_2015 <- numeric_max(wh_2015_df)
max_2016 <- numeric_max(wh_2016_df)
max_2017 <- numeric_max(wh_2017_df)
max_2018 <- numeric_max(wh_2018_df)
max_2019 <- numeric_max(wh_2019_df)
max_2020 <- numeric_max(wh_2020_df)
max_2021 <- numeric_max(wh_2021_df)
all_maxs_df <- rbind(max_2015, max_2016, max_2017, max_2018,
max_2019, max_2020, max_2021)
all_maxs_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_maxs_df <- select(all_maxs_df, 7, 1, 2, 3, 4, 5, 6)
View(all_maxs_df)
numeric_max <- function(df) {
numeric_max_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
max, na.rm = FALSE)
return(numeric_max_df)
}
max_2015 <- numeric_max(wh_2015_df)
max_2016 <- numeric_max(wh_2016_df)
max_2017 <- numeric_max(wh_2017_df)
max_2018 <- numeric_max(wh_2018_df)
max_2019 <- numeric_max(wh_2019_df)
max_2020 <- numeric_max(wh_2020_df)
max_2021 <- numeric_max(wh_2021_df)
all_maxs_df <- rbind(max_2015, max_2016, max_2017, max_2018,
max_2019, max_2020, max_2021)
all_maxs_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_maxs_df <- select(all_maxs_df, 7, 1, 2, 3, 4, 5, 6)
# View all tables
View(Happiness_by_Region_2021)
View(all_means_df)
View(all_mins_df)
numeric_max <- function(df) {
numeric_max_df <- df %>%
summarise_at(c('Happiness.Score', 'Family',
'Health..Life.Expectancy.' , 'Freedom',
'Trust..Government.Corruption.', 'Generosity'),
max, na.rm = TRUE)
return(numeric_max_df)
}
max_2015 <- numeric_max(wh_2015_df)
max_2016 <- numeric_max(wh_2016_df)
max_2017 <- numeric_max(wh_2017_df)
max_2018 <- numeric_max(wh_2018_df)
max_2019 <- numeric_max(wh_2019_df)
max_2020 <- numeric_max(wh_2020_df)
max_2021 <- numeric_max(wh_2021_df)
all_maxs_df <- rbind(max_2015, max_2016, max_2017, max_2018,
max_2019, max_2020, max_2021)
all_maxs_df$year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021)
all_maxs_df <- select(all_maxs_df, 7, 1, 2, 3, 4, 5, 6)
# View all tables
View(Happiness_by_Region_2021)
View(all_means_df)
View(all_mins_df)
# View all tables
View(Happiness_by_Region_2021)
View(all_means_df)
View(all_mins_df)
View(all_mins_df)
# View all tables
View(Happiness_by_Region_2021)
View(all_means_df)
View(all_mins_df)
View(all_mins_df)
View(all_maxs_df)
